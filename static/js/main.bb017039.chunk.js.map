{"version":3,"sources":["components/Todo/Todo.tsx","components/TodosList/TodosList.tsx","App.tsx","api.ts","index.tsx"],"names":["Todo","todo","id","user","name","title","completed","TodosList","todos","onSortTask","onSortName","onSortStatus","className","type","onClick","src","alt","map","key","App","useState","isLoaded","setLoaded","setTodos","loadTodos","a","Promise","all","fetch","then","response","json","todosLoaded","users","todosWithUsers","find","userId","length","disabled","sort","b","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"6PAMaA,G,MAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC7B,4BACE,4BAAKA,EAAKC,IACV,4BAAKD,EAAKE,KAAOF,EAAKE,KAAKC,KAAO,IAClC,4BAAKH,EAAKI,OACV,4BAAKJ,EAAKK,UAAY,WAAa,iBCD1BC,EAAuB,SAAC,GAAD,IAClCC,EADkC,EAClCA,MACAC,EAFkC,EAElCA,WACAC,EAHkC,EAGlCA,WACAC,EAJkC,EAIlCA,aAJkC,OAMlC,2BAAOC,UAAU,SACf,2BAAOA,UAAU,iBACf,4BACE,kCACA,mCAEE,4BACEC,KAAK,SACLC,QAASJ,EACTE,UAAU,OAEV,yBACEG,IAAI,kDACJH,UAAU,cACVI,IAAI,gBAIV,4BACE,4BACEH,KAAK,SACLC,QAASL,EACTG,UAAU,OAEV,yBACEG,IAAI,kDACJH,UAAU,cACVI,IAAI,eATV,QAcA,qCAEE,4BACEH,KAAK,SACLC,QAASH,EACTC,UAAU,OAEV,yBACEG,IAAI,kDACJH,UAAU,cACVI,IAAI,kBAMd,+BACGR,EAAMS,KAAI,SAAAhB,GAAI,OACb,kBAAC,EAAD,CAAMiB,IAAKjB,EAAKC,GAAID,KAAMA,UCNnBkB,EAvDK,WAAO,IAAD,EACMC,oBAAkB,GADxB,mBACjBC,EADiB,KACPC,EADO,OAEEF,mBAAyB,IAF3B,mBAEjBZ,EAFiB,KAEVe,EAFU,KAIlBC,EAAS,uCAAG,oCAAAC,EAAA,6DAChBH,GAAU,GADM,SAEmBI,QAAQC,IAAI,CCF1CC,MARS,8CASbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UANtBH,MAJS,8CAKbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YDIX,mCAETC,EAFS,KAEIC,EAFJ,KAIVC,EAAiBF,EAAYf,KAAI,SAAAhB,GAAI,sBACtCA,EADsC,CAEzCE,KAAM8B,EAAME,MAAK,SAAAhC,GAAI,OAAIA,EAAKD,KAAOD,EAAKmC,eAG5Cb,EAASW,GATO,2CAAH,qDAyBf,OAAqB,IAAjB1B,EAAM6B,OAEN,oCACE,4BACExB,KAAK,SACLD,UAAU,WACVE,QAASU,EACTc,SAAUjB,GAJZ,QAQA,uBAAGT,UAAU,QAAQS,EAAW,aAAe,KAMnD,kBAAC,EAAD,CACEb,MAAOA,EACPC,WAhCgB,WAClBc,EAAS,YAAIf,GAAO+B,MAAK,SAACd,EAAGe,GAAJ,OAAUf,EAAEpB,MAAMoC,cAAcD,EAAEnC,YAgCzDK,WA7Be,WAEjBa,EAAS,YAAIf,GAAO+B,MAAK,SAACd,EAAGe,GAAJ,OAAUf,EAAEtB,KAAMC,KAAKqC,cAAcD,EAAErC,KAAMC,WA4BpEO,aAzBiB,WACnBY,EAAS,YAAIf,GAAO+B,MAAK,SAACd,EAAGe,GAAJ,OAAUE,OAAOF,EAAElC,WAAaoC,OAAOjB,EAAEnB,mBE3BtEqC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bb017039.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\ninterface Props {\n  todo: TodoWithUser;\n}\n\nexport const Todo: FC<Props> = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>{todo.user ? todo.user.name : ''}</td>\n    <td>{todo.title}</td>\n    <td>{todo.completed ? 'Complete' : 'Incomplete'}</td>\n  </tr>\n);\n","import React, { FC } from 'react';\nimport { Todo } from '../Todo/Todo';\n\ninterface State {\n  todos: TodoWithUser[];\n  onSortTask: () => void;\n  onSortName: () => void;\n  onSortStatus: () => void;\n}\n\nexport const TodosList: FC<State> = ({\n  todos,\n  onSortTask,\n  onSortName,\n  onSortStatus,\n}) => (\n  <table className=\"table\">\n    <thead className=\"table__header\">\n      <tr>\n        <th>ID</th>\n        <th>\n          User\n          <button\n            type=\"button\"\n            onClick={onSortName}\n            className=\"btn\"\n          >\n            <img\n              src=\"https://img.icons8.com/metro/26/000000/sort.png\"\n              className=\"table__icon\"\n              alt=\"Sort icon\"\n            />\n          </button>\n        </th>\n        <th>\n          <button\n            type=\"button\"\n            onClick={onSortTask}\n            className=\"btn\"\n          >\n            <img\n              src=\"https://img.icons8.com/metro/26/000000/sort.png\"\n              className=\"table__icon\"\n              alt=\"Sort icon\"\n            />\n          </button>\n          Task\n        </th>\n        <th>\n          Status\n          <button\n            type=\"button\"\n            onClick={onSortStatus}\n            className=\"btn\"\n          >\n            <img\n              src=\"https://img.icons8.com/metro/26/000000/sort.png\"\n              className=\"table__icon\"\n              alt=\"Sort icon\"\n            />\n          </button>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <Todo key={todo.id} todo={todo} />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useState, FC } from 'react';\nimport './App.css';\nimport { TodosList } from './components/TodosList/TodosList';\nimport { getUsers, getTodos } from './api';\n\nconst App: FC<{}> = () => {\n  const [isLoaded, setLoaded] = useState<boolean>(false);\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n\n  const loadTodos = async () => {\n    setLoaded(true);\n    const [todosLoaded, users] = await Promise.all([getTodos(), getUsers()]);\n\n    const todosWithUsers = todosLoaded.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n\n    setTodos(todosWithUsers);\n  };\n\n  const sortByTitle = () => {\n    setTodos([...todos].sort((a, b) => a.title.localeCompare(b.title)));\n  };\n\n  const sortByName = () => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    setTodos([...todos].sort((a, b) => a.user!.name.localeCompare(b.user!.name)));\n  };\n\n  const sortByStatus = () => {\n    setTodos([...todos].sort((a, b) => Number(b.completed) - Number(a.completed)));\n  };\n\n  if (todos.length === 0) {\n    return (\n      <>\n        <button\n          type=\"button\"\n          className=\"btn-load\"\n          onClick={loadTodos}\n          disabled={isLoaded}\n        >\n          Load\n        </button>\n        <p className=\"text\">{isLoaded ? 'Loading...' : ''}</p>\n      </>\n    );\n  }\n\n  return (\n    <TodosList\n      todos={todos}\n      onSortTask={sortByTitle}\n      onSortName={sortByName}\n      onSortStatus={sortByStatus}\n    />\n  );\n};\n\nexport default App;\n","const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getUsers = (): Promise<User[]> => {\n  return fetch(USERS_URL)\n    .then(response => response.json());\n};\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return fetch(TODOS_URL)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}